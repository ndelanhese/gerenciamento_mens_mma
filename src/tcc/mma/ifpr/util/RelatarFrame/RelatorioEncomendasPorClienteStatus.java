/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tcc.mma.ifpr.util.RelatarFrame;

import static java.awt.Frame.NORMAL;
import java.sql.Connection;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import tcc.mma.ifpr.bean.Cliente;
import tcc.mma.ifpr.bean.Encomenda;
import tcc.mma.ifpr.bean.Mercadoria;
import tcc.mma.ifpr.dao.ClienteDAO;
import tcc.mma.ifpr.dao.EncomendaDAO;
import tcc.mma.ifpr.dao.MercadoriaDAO;
import tcc.mma.ifpr.util.FabricaDeConexoes;

/**
 *
 * @author nnath
 */
public class RelatorioEncomendasPorClienteStatus extends javax.swing.JInternalFrame {

    /**
     * Creates new form relatorioEncomendasPorClienteStatus
     */
    public RelatorioEncomendasPorClienteStatus() {
        initComponents();
    }

    public void povoar(int pk) {

        try {
            Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
            EncomendaDAO daoEncomenda = new EncomendaDAO(con);

            Encomenda encomenda = daoEncomenda.retrieve(pk);

            txtIDEncomenda.setText(String.valueOf(encomenda.getId()));
            txtIDEncomenda.setVisible(false);
            jLabel1.setVisible(false);

            txtData.setText(String.valueOf(encomenda.getDataEncomenda()));

            ClienteDAO daoCliente = new ClienteDAO(con);
            Cliente cliente = daoCliente.retrieve(encomenda.getCliente().getId());
            txtCliente.setText(cliente.getNome());

            txtMercadoria.setText(null);
            transformarMerc(encomenda.getMercadoria());

            int status = encomenda.getStatus();

            if (status == 1) {
                jcbStatus.setSelectedIndex(0);
            } else {
                if (status == 2) {
                    jcbStatus.setSelectedIndex(1);
                } else {
                    jcbStatus.setSelectedIndex(2);

                }
            }

        } catch (Exception e) {

        }

    }

    public void transformarMerc(String mercadorias) {

        String[] t = mercadorias.split(Pattern.quote(","));

        String[] y = new String[t.length];
        String[] z = new String[t.length];

        for (int i = 0; i < t.length; i++) {

            y[i] = t[i].replace(" ", "");
            z[i] = y[i].replace(".", "");
        }

        for (int i = 0; i < y.length; i++) {

            try {

                Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
                MercadoriaDAO daoMercadoria = new MercadoriaDAO(con);
                Mercadoria mercadoria = daoMercadoria.retrieve(Integer.parseInt(z[i]));
                String existe = txtMercadoria.getText();
                if (existe.isEmpty()) {
                    txtMercadoria.setText(mercadoria.getDescricao());
                } else {
                    txtMercadoria.setText(existe + ", " + mercadoria.getDescricao());
                }

            } catch (Exception e) {
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMercadoria = new javax.swing.JTextField();
        jbAtivo = new javax.swing.JButton();
        jbConcluido = new javax.swing.JButton();
        jbCancelado = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jcbStatus = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtIDEncomenda = new javax.swing.JTextField();

        setTitle("Atualizar Status da Encomenda");

        jLabel2.setText("Cliente:");

        txtCliente.setEditable(false);

        jLabel3.setText("Data:");

        txtData.setEditable(false);

        jLabel4.setText("Mercadorias:");

        txtMercadoria.setEditable(false);

        jbAtivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcc/mma/ifpr/img/ativado.png"))); // NOI18N
        jbAtivo.setText("Ativa");
        jbAtivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtivoActionPerformed(evt);
            }
        });

        jbConcluido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcc/mma/ifpr/img/concluido.png"))); // NOI18N
        jbConcluido.setText("Concluida");
        jbConcluido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConcluidoActionPerformed(evt);
            }
        });

        jbCancelado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcc/mma/ifpr/img/cancelar.png"))); // NOI18N
        jbCancelado.setText("Cancelada");
        jbCancelado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCanceladoActionPerformed(evt);
            }
        });

        jLabel5.setText("Status Atual:");

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ativo", "Concluido", "Cancelado" }));
        jcbStatus.setEnabled(false);

        jLabel6.setText("Definir Encomenda como:");

        jLabel1.setText("ID Encomenda:");

        txtIDEncomenda.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtCliente)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtMercadoria, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(186, 186, 186)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtIDEncomenda, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jbAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbConcluido)
                .addGap(18, 18, 18)
                .addComponent(jbCancelado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbAtivo, jbCancelado, jbConcluido});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMercadoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtIDEncomenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAtivo)
                    .addComponent(jbConcluido)
                    .addComponent(jbCancelado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAtivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtivoActionPerformed

        if (JOptionPane.showConfirmDialog(null, "Você realmente deseja atualizar o status da encomenda para ATIVA?", "Atenção!",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            try {
                Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
                EncomendaDAO daoEncomenda = new EncomendaDAO(con);

                Encomenda encomenda = new Encomenda();

                encomenda.setStatus(1);
                encomenda.setId(Integer.parseInt(txtIDEncomenda.getText()));

                daoEncomenda.update(encomenda);

                JOptionPane.showMessageDialog(null, "O status atualizado com sucesso");

                RelatorioEncomendasPorCliente encomenda1 = (RelatorioEncomendasPorCliente) getParent().getComponent(1);

                encomenda1.pegarTabela();
                encomenda1.limpar();

                this.setVisible(false);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi possível atualizar o status", "Atenção", NORMAL);
            }
        } else {
            JOptionPane.showMessageDialog(null, "O status não será atualizado!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAtivoActionPerformed

    private void jbConcluidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConcluidoActionPerformed

        if (JOptionPane.showConfirmDialog(null, "Você realmente deseja atualizar o status da encomenda para CONCLUÍDA?", "Atenção!",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            try {
                Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
                EncomendaDAO daoEncomenda = new EncomendaDAO(con);

                Encomenda encomenda = new Encomenda();

                encomenda.setStatus(2);
                encomenda.setId(Integer.parseInt(txtIDEncomenda.getText()));

                daoEncomenda.update(encomenda);
                JOptionPane.showMessageDialog(null, "O status atualizado com sucesso");

                RelatorioEncomendasPorCliente encomenda1 = (RelatorioEncomendasPorCliente) getParent().getComponent(1);

                encomenda1.pegarTabela();
                encomenda1.limpar();

                this.setVisible(false);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi possível atualizar o status", "Atenção", NORMAL);
            }
        } else {
            JOptionPane.showMessageDialog(null, "O status não será atualizado!");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jbConcluidoActionPerformed

    private void jbCanceladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCanceladoActionPerformed

        if (JOptionPane.showConfirmDialog(null, "Você realmente deseja atualizar o status da encomenda para CANCELADA?", "Atenção!",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            try {
                Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
                EncomendaDAO daoEncomenda = new EncomendaDAO(con);

                Encomenda encomenda = new Encomenda();

                encomenda.setStatus(3);
                encomenda.setId(Integer.parseInt(txtIDEncomenda.getText()));

                daoEncomenda.update(encomenda);
                JOptionPane.showMessageDialog(null, "O status atualizado com sucesso");

                RelatorioEncomendasPorCliente encomenda1 = (RelatorioEncomendasPorCliente) getParent().getComponent(1);

                encomenda1.pegarTabela();
                encomenda1.limpar();

                this.setVisible(false);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi possível atualizar o status", "Atenção", NORMAL);
            }
        } else {
            JOptionPane.showMessageDialog(null, "O status não será atualizado!");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jbCanceladoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbAtivo;
    private javax.swing.JButton jbCancelado;
    private javax.swing.JButton jbConcluido;
    private javax.swing.JComboBox<String> jcbStatus;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtIDEncomenda;
    private javax.swing.JTextField txtMercadoria;
    // End of variables declaration//GEN-END:variables
}
