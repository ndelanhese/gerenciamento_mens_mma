/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tcc.mma.ifpr.util.CadastrarFrame;

import static java.awt.Frame.NORMAL;
import java.security.MessageDigest;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import tcc.mma.ifpr.bean.Usuario;
import tcc.mma.ifpr.dao.UsuarioDAO;
import tcc.mma.ifpr.util.FabricaDeConexoes;
import tcc.mma.ifpr.util.TableModel.TableModelUsuario;
import tcc.mma.ifpr.util.Validar.Texto;

/**
 *
 * @author nnath
 */
public class CadastrarUsuario extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastrarUsuario
     */
    public CadastrarUsuario() {
        initComponents();

    }

    public void pegarTabela() {

        try {
            Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
            UsuarioDAO daoUsuario = new UsuarioDAO(con);
            List<Usuario> user = daoUsuario.retrieveAllFull();

            TableModelUsuario tableModelUsuario = new TableModelUsuario();
            jtUsuario.setModel(tableModelUsuario);

            for (int i = 0; i < user.size(); i++) {

                Usuario usuario = new Usuario();
                usuario.setId(user.get(i).getId());
                usuario.setNome(user.get(i).getNome());
                usuario.setLogin(user.get(i).getLogin());
                tableModelUsuario.addRow(usuario);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível atualizar a tabela Usuário!", "Atenção", NORMAL);
        }

    }

    public void ProximoId() throws SQLException {
        Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
        UsuarioDAO daoUsuario = new UsuarioDAO(con);
        Usuario user = daoUsuario.takeLastId();

        txtId.setText(String.valueOf(user.getId() + 1));

    }

    public int verificarSenha() {
        String um = txtSenha.getText();
        String dois = txtConfirmarSenha.getText();

        if (um.equals(dois)) {
            return 0;
        } else {
            return 1;
        }

    }

    public int verificarUser() {
        int confirmado = 2;
        try {
            Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
            UsuarioDAO daoUsuario = new UsuarioDAO(con);
            int conf = daoUsuario.conferirUser(txtLogin.getText());

            if (conf == 1) {
                confirmado = 0;

            } else {
                confirmado = 1;

            }

        } catch (Exception e) {

        }

        return confirmado;
    }

    public String transformada(String pass) {

        String md = "";
        try {
            String senhaAdmin = pass;

            MessageDigest algorithm = MessageDigest.getInstance("SHA-256");
            byte messageDigestSenhaAdmin[] = algorithm.digest(senhaAdmin.getBytes("UTF-8"));

            StringBuilder hexStringSenhaAdmin = new StringBuilder();
            for (byte b : messageDigestSenhaAdmin) {
                hexStringSenhaAdmin.append(String.format("%02X", 0xFF & b));
            }
            String senhahexAdmin = hexStringSenhaAdmin.toString();

            md = String.valueOf(senhahexAdmin);

        } catch (Exception e) {
        }
        return md;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblId = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblLogin = new javax.swing.JLabel();
        lblSenha = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        jbConfirmar = new javax.swing.JButton();
        lblConfirmarSenha = new javax.swing.JLabel();
        cbPass = new javax.swing.JCheckBox();
        txtSenha = new javax.swing.JPasswordField();
        txtConfirmarSenha = new javax.swing.JPasswordField();
        jcTipoUsuario = new javax.swing.JComboBox<>();
        lblTipoUsuario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtUsuario = new javax.swing.JTable();

        setClosable(true);
        setTitle("Cadastrar Usuário");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        lblId.setText("ID:");

        lblNome.setText("Nome:");

        lblLogin.setText("Login:");

        lblSenha.setText("Senha:");

        txtId.setEnabled(false);

        jbConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcc/mma/ifpr/img/cadastrar.png"))); // NOI18N
        jbConfirmar.setText("Cadastrar");
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        lblConfirmarSenha.setText("Confirmar Senha:");

        cbPass.setText("Mostrar Senha");
        cbPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPassActionPerformed(evt);
            }
        });

        txtConfirmarSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConfirmarSenhaKeyPressed(evt);
            }
        });

        jcTipoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Comum", "Administrador" }));

        lblTipoUsuario.setText("Tipo de Usuário:");

        jtUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Login"
            }
        ));
        jtUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtUsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtUsuario);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbConfirmar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblId)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblNome)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblLogin)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTipoUsuario)
                                        .addGap(24, 24, 24)
                                        .addComponent(jcTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblSenha)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbPass)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblConfirmarSenha)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 172, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLogin)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenha)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPass)
                    .addComponent(lblConfirmarSenha)
                    .addComponent(txtConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipoUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 286, Short.MAX_VALUE)
                .addComponent(jbConfirmar)
                .addContainerGap())
        );

        setBounds(0, 0, 963, 685);
    }// </editor-fold>//GEN-END:initComponents

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed

        Texto texto = new Texto();
        String retorno = texto.textoConverter(txtNome.getText());
        txtNome.setText(retorno);

        if (txtNome.getText().isEmpty() || txtLogin.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Preencha todos os dados!", "Atenção", NORMAL);

        } else {

            String nome = txtNome.getText();
            String login = txtLogin.getText();
            String pass = txtSenha.getText();
            String pass2 = transformada(pass);

            int cb = jcTipoUsuario.getSelectedIndex();

            int veri = verificarSenha();
            int veriUser = verificarUser();

            if (veri == 1) {

                JOptionPane.showMessageDialog(null, "As senhas não são correspondentes", "Atenção", NORMAL);
                txtSenha.setText("");
                txtConfirmarSenha.setText("");

            } else {

                if (veriUser == 0) {
                    JOptionPane.showMessageDialog(null, "Usuário já existente", "Atenção", NORMAL);
                    txtLogin.setText("");
                    txtSenha.setText("");
                    txtConfirmarSenha.setText("");

                } else {

                    try {
                        Connection con = FabricaDeConexoes.criarConexaoParaMySQL();

                        int tipoUser = jcTipoUsuario.getSelectedIndex();

                        Usuario usuario = new Usuario(1, nome, login, pass2, cb, tipoUser);
                        UsuarioDAO daoUsuario = new UsuarioDAO(con);
                        daoUsuario.create(usuario);

                        JOptionPane.showMessageDialog(null, "Usuário cadastrado com sucesso!");

                        ProximoId();

                        int a = Integer.parseInt(txtId.getText()) - 1;

                        String tamanho = txtSenha.getText();

                        String ta = "";

                        for (int i = 0; i < tamanho.length(); i++) {
                            ta = ta + "*";
                        }

                        txtNome.setText("");
                        txtLogin.setText("");
                        txtSenha.setText("");
                        txtConfirmarSenha.setText("");

                    } catch (Exception e) {

                    }

                }
            }

            pegarTabela();

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbConfirmarActionPerformed

    private void cbPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPassActionPerformed

        if (cbPass.isSelected()) {
            txtSenha.setEchoChar((char) 0);
            txtConfirmarSenha.setEchoChar((char) 0);
        } else {
            txtSenha.setEchoChar('*');
            txtConfirmarSenha.setEchoChar('*');
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_cbPassActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        try {
            ProximoId();
        } catch (SQLException e) {
        }

        pegarTabela();

        txtNome.requestFocus();
// TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void jtUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtUsuarioMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_jtUsuarioMouseClicked

    private void txtConfirmarSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmarSenhaKeyPressed
if (evt.getKeyCode() == evt.VK_ENTER) {
            jbConfirmar.doClick();

        }          // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmarSenhaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbPass;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JComboBox<String> jcTipoUsuario;
    private javax.swing.JTable jtUsuario;
    private javax.swing.JLabel lblConfirmarSenha;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JLabel lblTipoUsuario;
    private javax.swing.JPasswordField txtConfirmarSenha;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables
}
