/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tcc.mma.ifpr.util.AcaoFrame;

import static java.awt.Frame.NORMAL;
import java.sql.Connection;
import java.util.List;
import javax.swing.JOptionPane;
import tcc.mma.ifpr.bean.Mercadoria;
import tcc.mma.ifpr.dao.MercadoriaDAO;
import tcc.mma.ifpr.util.FabricaDeConexoes;
import tcc.mma.ifpr.util.TableModel.TableModelMercadoriaFull;

/**
 *
 * @author nnath
 */
public class AcaoAdicionarMercadoria extends javax.swing.JInternalFrame {

    /**
     * Creates new form AcaoAdicionarMercadoria
     */
    public AcaoAdicionarMercadoria() {
        initComponents();
        
    }

    public void pegarTabelaMercadoria() {

        try {

            Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
            MercadoriaDAO daoMercadoria = new MercadoriaDAO(con);
            List<Mercadoria> mer = daoMercadoria.retrieveAll1();

            TableModelMercadoriaFull tableModelMercadoria = new TableModelMercadoriaFull();

            jtTabela.setModel(tableModelMercadoria);

            for (int i = 0; i < mer.size(); i++) {

                if (mer.get(i).getQuantide() == 0) {

                } else {

                    int status = mer.get(i).getStatus();

                    if (status == 3 || status == 2) {

                    } else {

                        Mercadoria mercadorias = new Mercadoria();

                        mercadorias.setId(mer.get(i).getId());
                        mercadorias.setCategoria(mer.get(i).getCategoria());
                        mercadorias.setDescricao(mer.get(i).getDescricao());
                        mercadorias.setCor(mer.get(i).getCor());
                        mercadorias.setTamanho(mer.get(i).getTamanho());
                        mercadorias.setValor_venda(mer.get(i).getValor_venda());

                        tableModelMercadoria.addRow(mercadorias);
                    }
                }
            }

        } catch (Exception e) {
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTamanho = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtValorVenda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtCategoria = new javax.swing.JTextField();
        txtCor = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFornecedor = new javax.swing.JTextField();
        jbAdicionar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtIDPesquisa = new javax.swing.JTextField();
        jbBuscarID = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jbBuscarMercadoria = new javax.swing.JButton();
        txtBuscarMercadoria = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Mercadorias");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        txtTamanho.setEditable(false);

        jLabel4.setText("Descrição:");

        txtDescricao.setEditable(false);

        jLabel5.setText("Marca:");

        txtMarca.setEditable(false);

        jLabel7.setText("Valor unidade:");

        txtValorVenda.setEditable(false);

        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Categoria", "Mercadoria", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTabela.getTableHeader().setReorderingAllowed(false);
        jtTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtTabela);
        if (jtTabela.getColumnModel().getColumnCount() > 0) {
            jtTabela.getColumnModel().getColumn(0).setPreferredWidth(100);
            jtTabela.getColumnModel().getColumn(0).setMaxWidth(100);
            jtTabela.getColumnModel().getColumn(1).setPreferredWidth(180);
            jtTabela.getColumnModel().getColumn(1).setMaxWidth(180);
            jtTabela.getColumnModel().getColumn(3).setPreferredWidth(180);
            jtTabela.getColumnModel().getColumn(3).setMaxWidth(180);
        }

        jLabel1.setText("ID:");

        txtID.setEditable(false);

        jLabel2.setText("Categoria:");

        jLabel9.setText("Cor:");

        txtCategoria.setEditable(false);

        txtCor.setEditable(false);

        jLabel10.setText("Tamanho:");

        jLabel3.setText("Fornecedor:");

        txtFornecedor.setEditable(false);

        jbAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcc/mma/ifpr/img/ativado.png"))); // NOI18N
        jbAdicionar.setText("Adicionar");
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jbLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcc/mma/ifpr/img/limpar.png"))); // NOI18N
        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcc/mma/ifpr/img/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jLabel6.setText("ID:");

        txtIDPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDPesquisaKeyTyped(evt);
            }
        });

        jbBuscarID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcc/mma/ifpr/img/buscar.png"))); // NOI18N
        jbBuscarID.setText("Buscar");
        jbBuscarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarIDActionPerformed(evt);
            }
        });

        jLabel8.setText("Mercadoria:");

        jbBuscarMercadoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tcc/mma/ifpr/img/buscar.png"))); // NOI18N
        jbBuscarMercadoria.setText("Buscar");
        jbBuscarMercadoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarMercadoriaActionPerformed(evt);
            }
        });

        jLabel11.setText("Quantidade:");

        txtQuantidade.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbAdicionar)
                        .addGap(18, 18, 18)
                        .addComponent(jbLimpar)
                        .addGap(18, 18, 18)
                        .addComponent(jbCancelar)
                        .addGap(242, 242, 242))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtFornecedor))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txtCor, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(txtTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtIDPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbBuscarID)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtBuscarMercadoria, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbBuscarMercadoria)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txtQuantidade)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbAdicionar, jbCancelar, jbLimpar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtIDPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscarID)
                    .addComponent(jLabel8)
                    .addComponent(jbBuscarMercadoria)
                    .addComponent(txtBuscarMercadoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(txtCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAdicionar)
                    .addComponent(jbLimpar)
                    .addComponent(jbCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTabelaMouseClicked

        int linhaSelecionada = jtTabela.getSelectedRow();

        if (linhaSelecionada != -1) {
            TableModelMercadoriaFull tbMercadoriaFull = (TableModelMercadoriaFull) jtTabela.getModel();
            Mercadoria mercadorias = tbMercadoriaFull.getMercadoria(jtTabela.getSelectedRow());

            try {

                Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
                MercadoriaDAO daoMercadoria = new MercadoriaDAO(con);
                Mercadoria mercadoria = daoMercadoria.retrieve(mercadorias.getId());

                txtID.setText(String.valueOf(mercadoria.getId()));
                txtCategoria.setText(mercadoria.getCategoria().getCategoria());
                txtFornecedor.setText(mercadoria.getFornecedor().getRazaoSocial());
                txtDescricao.setText(mercadoria.getDescricao());
                txtCor.setText(mercadoria.getCor());
                txtTamanho.setText(mercadoria.getTamanho());
                txtQuantidade.setText(String.valueOf(mercadoria.getQuantide()));
                txtMarca.setText(mercadoria.getMarca().getMarca());

                txtValorVenda.setText(mercadoria.getValor_venda());

            } catch (Exception e) {

            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jtTabelaMouseClicked

    private void jbBuscarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarIDActionPerformed

        if (txtIDPesquisa.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Digite um ID!",
                    "Atenção", NORMAL);
        } else {

            try {

                Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
                MercadoriaDAO daoMercadoria = new MercadoriaDAO(con);

                Mercadoria mercadoria = daoMercadoria.retrieve(Integer.parseInt(txtIDPesquisa.getText()));

                if (mercadoria.getQuantide() == 0) {
                    txtIDPesquisa.setText(null);
                    JOptionPane.showMessageDialog(null, "O produto '" + mercadoria.getDescricao() + "' não está disponível em estoque");
                    pegarTabelaMercadoria();

                } else {

                    int status = mercadoria.getStatus();
                    if (status == 3) {
                        txtIDPesquisa.setText(null);
                        JOptionPane.showMessageDialog(null, "O produto '" + mercadoria.getDescricao() + "' foi excluido do estoque");
                        pegarTabelaMercadoria();

                    } else {

                        TableModelMercadoriaFull tableModelMercadoria = new TableModelMercadoriaFull();

                        jtTabela.setModel(tableModelMercadoria);

                        Mercadoria mercadorias = new Mercadoria();

                        mercadorias.setId(mercadoria.getId());
                        mercadorias.setCategoria(mercadoria.getCategoria());
                        mercadorias.setDescricao(mercadoria.getDescricao());
                        mercadoria.setCor(mercadoria.getCor());
                        mercadoria.setTamanho(mercadoria.getTamanho());
                        mercadorias.setValor_venda(mercadoria.getValor_venda());
                        tableModelMercadoria.addRow(mercadorias);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi possível localizar o ID '" + txtIDPesquisa.getText() + "'",
                        "Atenção", NORMAL);

                pegarTabelaMercadoria();
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbBuscarIDActionPerformed

    private void txtIDPesquisaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDPesquisaKeyTyped

        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDPesquisaKeyTyped

    private void jbBuscarMercadoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarMercadoriaActionPerformed
        if (txtBuscarMercadoria.getText().isEmpty() || txtBuscarMercadoria.getText().equals(null)) {

            try {

                Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
                MercadoriaDAO daoMercadoria = new MercadoriaDAO(con);
                List<Mercadoria> mer = daoMercadoria.retrieveAll1();

                TableModelMercadoriaFull tableModelMercadoria = new TableModelMercadoriaFull();

                jtTabela.setModel(tableModelMercadoria);

                for (int i = 0; i < mer.size(); i++) {

                    if (mer.get(i).getQuantide() == 0) {

                    } else {
                        int status = mer.get(i).getStatus();

                        if (status != 3) {
                            txtIDPesquisa.setText(null);
                           // JOptionPane.showMessageDialog(null, "O produto '" + mer.get(i).getDescricao() + "' foi excluido do estoque");

                        } else {

                            Mercadoria mercadorias = new Mercadoria();

                            mercadorias.setId(mer.get(i).getId());
                            mercadorias.setCategoria(mer.get(i).getCategoria());
                            mercadorias.setDescricao(mer.get(i).getDescricao());
                            mercadorias.setCor(mer.get(i).getCor());
                            mercadorias.setTamanho(mer.get(i).getTamanho());
                            mercadorias.setValor_venda(mer.get(i).getValor_venda());

                            tableModelMercadoria.addRow(mercadorias);
                        }
                    }
                }

            } catch (Exception e) {
            }

        } else {

            String mercadoria = txtBuscarMercadoria.getText();

            try {

                Connection con = FabricaDeConexoes.criarConexaoParaMySQL();
                MercadoriaDAO daoMercadoria = new MercadoriaDAO(con);
                List<Mercadoria> mer = daoMercadoria.retrieveNome1(mercadoria);

                TableModelMercadoriaFull tableModelMercadoria = new TableModelMercadoriaFull();

                jtTabela.setModel(tableModelMercadoria);

                for (int i = 0; i < mer.size(); i++) {

                    if (mer.get(i).getQuantide() == 0) {

                        txtIDPesquisa.setText(null);
                        JOptionPane.showMessageDialog(null, "O produto '" + mer.get(i).getDescricao() + "' não está disponível em estoque");
                        if (jtTabela.getRowCount() == 0) {
                            pegarTabelaMercadoria();
                        }
                    } else {
                        int status = mer.get(i).getStatus();
                        if (status == 3) {

                            txtIDPesquisa.setText(null);
                           // JOptionPane.showMessageDialog(null, "O produto '" + mer.get(i).getDescricao() + "' foi excluido do estoque");

                            if (jtTabela.getRowCount() == 0) {
                                pegarTabelaMercadoria();
                            }

                        } else {

                            Mercadoria mercadorias = new Mercadoria();

                            mercadorias.setId(mer.get(i).getId());
                            mercadorias.setCategoria(mer.get(i).getCategoria());
                            mercadorias.setDescricao(mer.get(i).getDescricao());
                            mercadorias.setCor(mer.get(i).getCor());
                            mercadorias.setTamanho(mer.get(i).getTamanho());
                            mercadorias.setValor_venda(mer.get(i).getValor_venda());

                            tableModelMercadoria.addRow(mercadorias);
                        }
                    }
                }

            } catch (Exception e) {

                JOptionPane.showMessageDialog(null, "Não foi possível localizar a mercadoria '" + txtBuscarMercadoria.getText() + "'",
                        "Atenção", NORMAL);

                pegarTabelaMercadoria();

            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jbBuscarMercadoriaActionPerformed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed

        if (txtCategoria.getText().isEmpty() || txtDescricao.getText().isEmpty()
                || txtCor.getText().isEmpty() || txtTamanho.getText().isEmpty()
                || txtFornecedor.getText().isEmpty() || txtMarca.getText().isEmpty()
                || txtValorVenda.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Preencha todos os dados do formulário utilizando a tabela!", "Atencão!", NORMAL);

        } else {

            AcaoVenda venda = (AcaoVenda) getParent().getComponent(1);

            venda.prepararMerc(Integer.parseInt(txtID.getText()));

            this.setVisible(false);
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        pegarTabelaMercadoria();
        txtBuscarMercadoria.requestFocus();

        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        setVisible(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed

        txtID.setText(null);
        txtCategoria.setText(null);
        txtFornecedor.setText(null);
        txtDescricao.setText(null);
        txtCor.setText(null);
        txtTamanho.setText(null);
        txtQuantidade.setText(null);
        txtMarca.setText(null);
        txtValorVenda.setText(null);

        // TODO add your handling code here:
    }//GEN-LAST:event_jbLimparActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbBuscarID;
    private javax.swing.JButton jbBuscarMercadoria;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JTable jtTabela;
    private javax.swing.JTextField txtBuscarMercadoria;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtCor;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtFornecedor;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIDPesquisa;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtTamanho;
    private javax.swing.JTextField txtValorVenda;
    // End of variables declaration//GEN-END:variables
}
